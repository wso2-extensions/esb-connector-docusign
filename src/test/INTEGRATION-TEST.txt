Product: Integration tests for WSO2 ESB DocuSign connector

Pre-requisites:

 - Maven 3.x
 - Java 1.6 or above
 - The org.wso2.esb.integration.integration-base project is required. The test suite has been configured to download this project automatically.
   If the automatic download fails, download the following project and compile it using the mvn clean install command to update your local repository:
   https://github.com/wso2-extensions/esb-integration-base

Tested Platform: 

 - Microsoft WINDOWS V-7
 - UBUNTU 16.04
 - WSO2 EI 6.4.0

Note:
    Set up a new DocuSign account and follow all the instruction given below in step 4 to generate an access token.

Steps to follow in setting integration test.

 1. Download wso2ei-6.4.0 from official website.

 2. Create a DocuSign developer account using URL https://secure.docusign.com/signup/develop
        Note: Get your free developer account.

 3. Follow the below mentioned steps to add valid certificate to access DocuSign API over https.

        i)   Download the certificate by clicking Demo SSL Certificate link by navigating to 'https://trust.docusign.com/en-us/trust-certifications/docusign-public-certificates/' and place it
             in to location "{DOCUSIGN_CONNECTOR_HOME}/repository/".

 4. Follow the bellow mentioned steps to generate the access token and refresh token:
        i)   Log in to your DocuSign account, and go to the following URLs:
                   https://demo.docusign.net/Member/MemberLogin.aspx?event=logout
        ii)  Get the integrator key and secret key.
             i.    Log in to DocuSign Admin
                   From your development account, select Go to Admin in the account settings drop-down menu.
             ii.   In DocuSign Admin, click API and Keys in the left navigation panel.
             iii.  Click ADD INTEGRATOR KEY.
             iv.   Add a description for your application and click  ADD to generate the integrator key.
             v.    The OAuth methods require you to provide a redirect URI for your application.
                   When your application sends an authorization request to DocuSign, it includes the redirect URI in the request.
             vi.   To generate a new secret key, click ADD SECRET KEY.
             vii.  Copy the secret key to a secure location immediately after you create it.
                   Secret keys are displayed in plain text only when they are first created.
             VII.  Click save.

             Now we have the integrator key and secret key. We will need an integrator key, which will serve as your client_id


        iii) Generate the Authentication Code
             To begin the Authentication Code Grant,
             you would direct the user to https://account-d.docusign.com/oauth/auth , with the following query parameters.

                   https://account-d.docusign.com/oauth/auth?
                      response_type=code
                     &scope=signature
                     &client_id=230546a7-9c55-40ad-8fbf-af205d5494ad  &redirect_uri=http://www.example.com/callback

             If the authentication is successful, the authentication service redirects the user to the redirect_uri.
             The callback contains a code that you will exchange for a token in the next step.


        iv)   Generate the access token and refresh token
              Make a POST request to https://account-d.docusign.com/oauth/token with the following headers and parameters.

              The Authorization header contains the word Basic and the base64 representation of your integrator key
              and the secret key you generated when you set up the integration in DocuSign Admin.
              The two keys are concatenated with a colon :.

              The body of the POST request needs two parameters:
              grant_type -	Must be authorization_code to exchange an authorization code for an access token.
              code	-	The authorization code that you received from the callback

              With the Authorization header and the body parameters, the POST request would look like this.
              Note that the Content-Type: application/x-www-form-urlencoded header is also required.

                   POST /oauth/token
                   Content-Type: application/x-www-form-urlencoded
                   Authorization: Basic MjMwNTQ2YTctOLThmYm2LTY4MmM3YmYyNzZlOQ==

                   grant_type=authorization_code&code=eyJ0eX...ei0iLIFk3A

              If the request is successful. It will give the access_token and refresh_token.
              (for more information https://docs.docusign.com/esign/guide/authentication/oa2_auth_code.html)

        vi)    To obtain the baseUrl, Call the getLoginInformation API method call(e.g. https://demo.docusign.net/restapi/v2/)

 5. Place the wso2ei-6.4.0.zip file in to location "{DOCUSIGN_CONNECTOR_HOME}/repository/".

 6. Update the esb-connector-docusign.properties file at location "{DOCUSIGN_CONNECTOR_HOME}/repository".

 7. Following are the properties used in the 'esb-connector-docusign.properties' file and docusign properties file at location "<DOCUSIGN_CONNECTOR_HOME>/src/test/resources/artifacts/ESB/connector/config" to run the integration tests.

    i) 		apiUrl					- Base endpoint URL to access the DocuSign API "https://demo.docusign.net".
    ii)		hostName				- The token endpoint.
    iii) 	integrationKey		    - The integration key.
    iv)		secretKey          		- The secret key.
    v)		apiVersion              - The version of the DocuSign API.
    vi) 	refreshToken	 	    - The refresh token.
    vii)	includeApiPassword		- (optional) When set to true, returns api_password in the response.
    viii)	includeAccountIDGuid	- (optional) When set to true, shows the account ID GUID in the response.
    ix)		loginSetting			- (optional) Determines whether login settings are returned in the response (valid values: all, none).
    x)      signers                 - Contains information about the signers.
    xi)     status                  - The status of the envelope. Set this property to created to save a draft of the envelope, or set it to sent to send it immediately to the recipients.
    xii)    emailSubject            - The subject of the email used to send the envelope.
    xiii)   templateRoles           - Specifies the template recipients. Each roleName in the template must have a recipient assigned to it.
    xiv)    email                   - Specifies the email of the recipient.
    xv)     returnUrl               - The URL the recipient is redirected to after the signing session has ended.
    xvi)    recipients              - Contains information about the recipients.
    xvii)   authenticationMehod     - The method to use to authenticate the recipient/signer.
    xviii)  documents               - Contains information about the documents.
    xix)    userName                - The username.

 8. Navigate to "{DOCUSIGN_CONNECTOR_HOME}" and run the following command.
      $ mvn clean install -Dskip-tests=false
